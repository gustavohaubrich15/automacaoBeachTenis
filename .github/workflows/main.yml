name: Publicar Projeto e Rodar Servi√ßo üöÄ
on:
  workflow_dispatch:
  schedule:
    - cron: '0 13 * * *'  
jobs:
  publish-and-run:
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: '8.0.x'
      PROJECT_PATH: './AutomationBeachTenis/AutomationBeachTenis/AutomationBeachTenis.csproj'
      PUBLISH_DIR: './publish'
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Restaurar dependencias
        run: dotnet restore ${{ env.PROJECT_PATH }}
      - name: Buildar projeto
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore
      - name: Publicar projeto
        run: dotnet publish ${{ env.PROJECT_PATH }} --configuration Release --output ${{ env.PUBLISH_DIR }}
      - name: Atualizar tokens Telegram no appsettings.json
        run: | 
          echo "Atualizando BotToken e ChatId no appsettings.json"
          sed -i 's|"BotToken": ".*"|"BotToken": "'"${TELEGRAM_BOT_TOKEN}"'"|g' ${{ env.PUBLISH_DIR }}/appsettings.json
          sed -i 's|"ChatId": ".*"|"ChatId": "'"${TELEGRAM_CHAT_ID}"'"|g' ${{ env.PUBLISH_DIR }}/appsettings.json
      - name: Ver conte√∫do do appsettings.json publicado
        run: cat ${{ env.PUBLISH_DIR }}/appsettings.json
      - name: Executar servi√ßo diretamente via github actions
        run: |
          echo "Executando servi√ßos para envio de mensagem telegram com argumento run-api-service-github-actions"
          dotnet ${{ env.PUBLISH_DIR }}/AutomationTennis.dll run-api-service-github-actions
